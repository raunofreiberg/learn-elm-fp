var _user$project$RealWorld$renderPerson = function (person) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(_elm_lang$core$Basics_ops['++'], 'Id: ', person.id)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(_elm_lang$core$Basics_ops['++'], 'Name: ', person.name)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$RealWorld$Model = function (a) {
	return {people: a};
};
var _user$project$RealWorld$Person = F2(
	function (a, b) {
		return {id: a, name: b};
	});
var _user$project$RealWorld$initialModel = {
	people: {
		ctor: '::',
		_0: A2(_user$project$RealWorld$Person, '1', 'Rauno'),
		_1: {ctor: '[]'}
	}
};
var _user$project$RealWorld$init = {ctor: '_Tuple2', _0: _user$project$RealWorld$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$RealWorld$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return {
			ctor: '_Tuple2',
			_0: {
				people: {
					ctor: '::',
					_0: A2(_user$project$RealWorld$Person, '2', _p0._0),
					_1: model.people
				}
			},
			_1: _elm_lang$core$Platform_Cmd$none
		};
	});
var _user$project$RealWorld$AddPerson = function (a) {
	return {ctor: 'AddPerson', _0: a};
};
var _user$project$RealWorld$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				A2(_elm_lang$core$List$map, _user$project$RealWorld$renderPerson, model.people)),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$RealWorld$AddPerson('asd')),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('+'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$RealWorld$main = _elm_lang$html$Html$program(
	{
		init: _user$project$RealWorld$init,
		view: _user$project$RealWorld$view,
		update: _user$project$RealWorld$update,
		subscriptions: _elm_lang$core$Basics$always(_elm_lang$core$Platform_Sub$none)
	})();
